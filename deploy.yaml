---
- hosts: all
  name: gather all facts regardless of target(s)
  gather_facts: true
  # Avoid clusters that are partially installed, by aborting if can't gather facts from all hosts
  any_errors_fatal: true
  tasks:
    - name: Check ansible version
      assert:
        that:
          - "{{ansible_version.full is version('2.8.4', '>=')}}"
        msg: "Ansible version should be 2.8.4 or later. Please upgrade ansible."
  tags:
    - always 

- hosts: all
  name: create groups and users
  vars_prompt:
    - name: hb_user
      prompt: "What is the user to run Healthbot?"
      default: healthbot
      # register: hb_name
    - name: hb_password
      prompt: "What is the password for Healthbot user?"
      default: Password01
      # register: hb_password
  gather_facts: false
  roles: 
    - { role: user, tags: ["healthbot"] }

- hosts: all
  name: install dependencies
  gather_facts: false
  roles: 
    - { role: os-packages, tags: ["infra", "healthbot"] }
    - { role: os-updates, tags: ["infra", "healthbot"] }
    - { role: kube-init, tags: ["init", "infra"] }
    - { role: os-changes, tags: ["init", "infra"] }
  become: yes
  become_user: root
  
- hosts: master
  name: install python dependencies
  gather_facts: false
  roles:
    - { role: python-updates, tags: [infra", "healthbot"] }
  become: yes
  become_user: root

- hosts: localhost
  vars:
    #hb_user_map: "{{ hostvars['dummy']['hb_user_map'] }}"
    #hb_pass_map: "{{ hostvars['dummy']['hb_pass_map'] }}"
    #hb_master: "{{ hostvars[groups['master'][0]].ansible_ssh_host }}"
  name: get Local HB file
  gather_facts: false
  roles: 
    - { role: local, tags: ["infra", "healthbot"] }
  
- hosts: master
  vars:
    #hb_user_map: "{{ hb_user_map }}"
    #hb_pass_map: "{{ hb_pass_map }}"
    hb_rpm_map: "{{ hostvars['localhost']['hb_rpm_map'] }}"
    hb_master: "{{ hostvars[groups['master'][0]].ansible_ssh_host }}"
  name: Transfer and Install HB rpm
  gather_facts: false
  roles: 
    - { role: transfer, tags: ["healthbot"] }


- hosts: master
  vars:
    #hb_user_map: "{{ groupvars['hb_user_map'] }}"
    #hb_pass_map: "{{ groupvars['hb_pass_map'] }}"
    hb_master: "{{ hostvars[groups['master'][0]] }}"
  name: Install docker machine and create workers
  gather_facts: false
  roles: 
    - { role: docker, tags: ["healthbot"] }
    - { role: swarm-init, tags: ["healthbot"] }
  become: yes
  become_user: "{{ hb_user_map }}"

- hosts: master
  vars:
    #hb_user_map: "{{ groupvars['hb_user_map'] }}"
    #hb_pass_map: "{{ groupvars['hb_pass_map'] }}"
    hb_master: "{{ hostvars[groups['master'][0]] }}"
  name: Install docker machine and create workers
  gather_facts: false
  roles: 
    - { role: kubeadm-init, tags: ["init", "infra"] }
  become: yes
  become_user: root

- hosts: workers
  vars:
    #hb_user_map: "{{ groupvars['hb_user_map'] }}"
    hb_swarm_map: "{{ hostvars['melmore']['hb_swarm_map'] }}"
    hb_master: "{{ hostvars[groups['master'][0]].ansible_ssh_host }}"
  name: Add Nodes to Swarm
  gather_facts: false
  roles:
    - { role: swarm-nodes, tags: ["healthbot"] }
  become: yes
  become_user: "{{ hb_user_map }}"

- hosts: workers
  vars:
    kubeadm_join: "{{ groups['master'][0].kubeadm_join }}"
    kubeadm_join_node: "{{ hostvars['melmore']['kubeadm_join_node'] }}"
    hb_master: "{{ hostvars[groups['master'][0]].ansible_ssh_host }}"
  name: Add Nodes to Kubernetes
  gather_facts: false
  roles:
    - { role: kubeadm-nodes, tags: ["init", "infra"] }
  become: yes
  become_user: root

- hosts: master
  vars:
    #hb_user_map: "{{ groupvars['hb_user_map'] }}"
    #hb_pass_map: "{{ groupvars['hb_pass_map'] }}"
    hb_master: "{{ hostvars[groups['master'][0]].ansible_ssh_host }}"
    hb_certs_path: "/var/local/healthbot/certs/cert.pem"
    hb_key_file: "/var/local/healthbot/certs/key.pem"
  name: Configure healthbot config
  gather_facts: false
  roles: 
    - { role: config, tags: ["healthbot"] }
  become: yes
  become_user: root

- hosts: master
  vars:
    #hb_user_map: "{{ groupvars['hb_user_map'] }}"
  name: Setup HB with configuration
  gather_facts: false
  roles: 
    - { role: setup, tags: ["healthbot"] }
  become: yes
  become_user: "{{ hb_user_map }}"

- hosts: master
  vars:
    #hb_user_map: "{{ groupvars['hb_user_map'] }}"
  name: Start HB with configuration
  gather_facts: false
  roles: 
    - { role: startup, tags: ["healthbot"] }
  become: yes
  become_user: "{{ hb_user_map }}"

- hosts: master
  gather_facts: false
  name: Retrieve Cluster Config
  roles:
    - { role: get-config, tags: ["infra", "ingress"] }
  become: yes
  become_user: root

- hosts: all
  gather_facts: false
  name: Set Nameserver
  roles:
    - { role: set-nameserver, tags: ["infra", "ingress"] }
  become: yes
  become_user: root

- hosts: master
  name: Deploy Registry
  gather_facts: false
  roles:
    - { role: master-registry, tags: ["infra", "ingress"] }
  become: yes
  become_user: root

- hosts: localhost
  name: Deploy Ingress Controller
  gather_facts: false
  roles:
    - { role: master-ingress, tags: ["infra", "ingress"] }
  become: yes
  become_user: root
